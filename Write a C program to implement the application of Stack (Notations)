#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <ctype.h>

#define MAX_SIZE 100

// Stack structure
typedef struct {
    int arr[MAX_SIZE];
    int top;
} Stack;

// Initialize stack
void initialize(Stack *stack) {
    stack->top = -1;
}

// Check if stack is empty
bool isEmpty(Stack *stack) {
    return stack->top == -1;
}

// Check if stack is full
bool isFull(Stack *stack) {
    return stack->top == MAX_SIZE - 1;
}

// Push an element onto the stack
void push(Stack *stack, int value) {
    if (isFull(stack)) {
        printf("Stack is full. Cannot push.\n");
        return;
    }
    
    stack->top++;
    stack->arr[stack->top] = value;
}

// Pop an element from the stack
int pop(Stack *stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty. Cannot pop.\n");
        return -1;
    }
    
    int value = stack->arr[stack->top];
    stack->top--;
    return value;
}

// Evaluate a postfix expression
int evaluatePostfix(char *expression) {
    Stack stack;
    initialize(&stack);
    
    for (int i = 0; expression[i] != '\0'; i++) {
        if (isdigit(expression[i])) {
            push(&stack, expression[i] - '0');
        } else if (expression[i] == '+') {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);
            push(&stack, operand1 + operand2);
        } else if (expression[i] == '-') {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);
            push(&stack, operand1 - operand2);
        } else if (expression[i] == '*') {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);
            push(&stack, operand1 * operand2);
        } else if (expression[i] == '/') {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);
            push(&stack, operand1 / operand2);
        }
    }
    
    return pop(&stack);
}

int main() {
    char expression[] = "52*83-6+*";
    int result = evaluatePostfix(expression);
    printf("Result: %d\n", result);
    
    return 0;
}




output:
Result: 110

--------------------------------
Process exited after 0.06465 seconds with return value 0
Press any key to continue . . .
